{"version":3,"sources":["components/Login/Login.js","components/Explore/Explore.js","components/Register/register.js","components/Navbar/navbar.js","components/AddPhoto/AddPhoto.js","components/EditUserInfo/EditUserInfo.js","components/Modal/modal.js","components/Profile/Profile.js","components/Home/Home.js","App.js","constants/routes.js","serviceWorker.js","index.js"],"names":["Login","state","username","password","handleChange","e","_this","setState","Object","defineProperty","currentTarget","name","value","handleSubmit","_callee","loggedUser","loginResponse","parsedResponse","regenerator_default","a","wrap","_context","prev","next","preventDefault","fetch","concat","process","method","body","JSON","stringify","headers","Content-Type","Access-Control-Allow-Origin","sent","json","console","log","user","id","message","props","logged","onHide","abrupt","history","push","authMessage","t0","stop","react_default","createElement","className","onSubmit","this","type","placeholder","onChange","Button_default","Component","withRouter","CardDeckMargin","styled","CardDeck","_templateObject","Explore","photo","userId","getPhotos","allPhotos","url","getUser","_callee2","userResponse","_context2","getUsername","arr","i","length","_this2","Container","Row","map","Card","key","Img","variant","src","Body","Title","title","Text","description","Footer","Image","roundedCircle","react_router_dom","to","created_by","Register","email","verify_password","target","newUser","success","loginUser","StyledDiv","div","navbar_templateObject","NavBar","_this$props","handleShow","isLogged","userID","Nav_default","Link","Item","Fragment","onClick","doLogout","AddPhoto","camera","category","newPhoto","photoResponse","EditUserInfo","userObj","doHandleInput","doHandleSubmit","defaultValue","Popup","show","handleClose","modalID","checkedLogged","Modal","Header","closeButton","components_Login_Login","register","components_AddPhoto_AddPhoto","components_EditUserInfo_EditUserInfo","Profile","userPhotos","match","params","photoRespnse","checkPhotos","newArr","sendDelete","_callee3","_context3","delete","photos","index","Carousel","Home_templateObject","_templateObject2","CarouselItem","_templateObject3","Home","creator","alt","Caption","es_Button","size","App","deletePic","num","Navbar_navbar","react_router","exact","path","render","components_Home_Home","components_Explore_Explore","components_Profile_Profile","logStat","modal","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5ee65ae.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport {Redirect,Route ,withRouter} from \"react-router\"\n\n\n\n\n\nclass Login extends Component {\n\n    state = {\n        username: '',\n        password: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.currentTarget.name]: e.currentTarget.value\n        });\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        const loggedUser = {\n            username: this.state.username,\n            password: this.state.password\n        }\n\n        try {\n            const loginResponse = await fetch(`${process.env.REACT_APP_BACKEND_URL}users/login`, {\n                method: 'POST',\n                // credentials: 'include',\n                body: JSON.stringify(loggedUser),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_BACKEND_URL}`\n                }\n            })\n\n            const parsedResponse = await loginResponse.json();\n            console.log(parsedResponse.user.id)\n            if(parsedResponse.message = \"success\"){\n                this.props.logged(parsedResponse.user.id);\n                // this.props.history.push(`/profile/${parsedResponse.id}`);\n\n                this.props.onHide()\n                return this.props.history.push(`/`)\n            } else {\n                this.setState({\n                    authMessage: parsedResponse\n                })\n            }\n\n\n        } catch(err) {\n            console.log(err);\n            return err\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"login\">\n                <h3>Login</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Username\n                        <input type=\"text\" name=\"username\" placeholder=\"username\" onChange={this.handleChange} value={this.state.username}/>\n                    </label>\n                    <br />\n                    <label>\n                        Password\n                        <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={this.handleChange} value={this.state.password}/>\n                    </label>\n                    <br />\n                    <Button type=\"submit\" onSubmit={this.handleSubmit}>Login</Button>\n\n                </form> \n            </div>\n        )   \n    }\n}\n\n\nexport default withRouter(Login);\n\n\n\n\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Container, Card, CardDeck, Row, Image} from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\n\n\nconst CardDeckMargin = styled(CardDeck) `\n    margin-top: 20px;\n    margin-bottom: 20px;\n\n    \n`\n\nclass Explore extends Component {\n\n  state = {\n    photo: [],\n    userId: []\n  }\n\n\n  getPhotos = async () => {\n    try {\n      const allPhotos = await fetch(`${process.env.REACT_APP_BACKEND_URL}photos/`, {\n        method:\"GET\",\n        headers: {\n          \"Content-Type\": 'application/json'\n        }\n      });\n\n      const parsedResponse = await allPhotos.json();\n      console.log(parsedResponse, ' this is parsed response')\n      this.setState({\n        photo: parsedResponse\n      })\n      console.log(this.state.photo[0].url, '<-----photos url')\n    } catch (err) {\n      console.log(err)\n      return err\n    }\n  }\n\n  getUser = async()=>{\n        \n try {\n    const userResponse = await fetch (`${process.env.REACT_APP_BACKEND_URL}users/`,{\n        method:\"GET\",\n        headers:{\n            \"Content-Type\":'application/json'\n        }\n    });\n    const parsedResponse = await userResponse.json();\n    console.log(parsedResponse, ' this is parsed response')\n    this.setState({\n        userId: parsedResponse\n    })\n    console.log(this.state.userId,'this is the state')\n  } catch(err){\n    console.log(err)\n    return err\n  }\n}\n  getUsername=(arr,id)=>{\n    for(let i = 0;i<arr.length;i++){\n\n      console.log(arr[i])\n      console.log(id)\n      if(arr[i].id==id){\n\n        return arr[i].username\n      }\n    }\n  }\n\n  componentDidMount(){\n    this.getPhotos();\n    this.getUser();\n  }\n\n    render(){\n\n      const photo = this.state.photo;\n      const userId = this.state.userId;\n      console.log(userId)\n        return (\n            <Container>\n              <CardDeckMargin>\n              <Row></Row>\n              {\n               photo.map((photo, i) => (\n              <Card key={i}>\n                <Card.Img variant=\"top\" src={photo.url} />\n                  <Card.Body>\n                  <Card.Title>{photo.title}</Card.Title>\n                  <Card.Text>\n                  {photo.description}\n                  </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Image src=\"https://picsum.photos/50/50\" roundedCircle /><br />\n                    <small className=\"text-muted\"><Link to={`/profile/${photo.created_by}`}> Photo by: {this.getUsername(userId,photo.created_by)}</Link></small>\n                </Card.Footer>\n              </Card>\n               ))\n              }\n            </CardDeckMargin>\n            </Container>\n        )\n    }\n}\n\nexport default Explore;","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport {withRouter} from \"react-router\";\n\nclass Register extends Component {\n\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        verify_password: ''   \n    }\n\n    \n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSubmit = async(e) => {\n        e.preventDefault()\n\n        const newUser = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            verify_password: this.state.verify_password\n          };\n        \n        try {\n            const loginResponse = await fetch(`${process.env.REACT_APP_BACKEND_URL}users/`, {\n                method: 'POST',\n                body: JSON.stringify(newUser),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_BACKEND_URL}`\n                }\n            })\n\n            const parsedResponse = await loginResponse.json();\n            console.log(parsedResponse)\n            if(parsedResponse.success === 'sucess'){\n                this.props.loginUser(parsedResponse);\n                this.props.history.push(`/profile`);\n                this.props.onHide()\n\n            }\n\n\n        } catch(err) {\n            console.log(err);\n            return err\n        }\n    \n    }\n    render(){\n        return (\n            <div>\n            <h3>Register</h3>\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Username:\n                    <input type='text' name='username' placeholder='username' onChange={this.handleChange} value={this.state.username}/><br/>\n                </label>\n                <label>\n                    Email:\n                    <input type='email' name='email' placeholder='email' onChange={this.handleChange} value={this.state.email}/><br/>\n                </label>\n                <label>\n                    Password:\n                    <input type='password' name='password' placeholder='password' onChange={this.handleChange} value={this.state.password}/><br/>\n                </label>\n                <label>\n                    Verify password:\n                    <input type='password' name='verify_password' placeholder='confirm password' onChange={this.handleChange} value={this.state.verify_password}/><br/>\n                </label>\n                <Button type='submit'>Register</Button>\n            </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Register);","import React, { Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport Nav from 'react-bootstrap/Nav'\n// import { LinkContainer } from \"react-router-bootstrap\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport './navbar.css'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div `\n    display: flex;\n    flex-align: row;\n    align-content: space-between;\n    text-decoration: none;\n    height: 100px;\n    background-color: #55ffff;\n    margin: 0 auto;\n\n    .nav-link {\n        display: flex;\n        padding: 0.5rem 1rem;\n        align-items: center;\n        align-content: center;\n\n    a {\n        color: #000;\n        text-decoration: none;\n        font-size: 36px;\n    }\n\n    a:hover {\n        color: #fff;\n\n\n    }\n`\n\nclass NavBar extends Component{\n    \n    render(){\n        const {handleShow, isLogged, userID} = this.props \n        return (\n        <StyledDiv>\n            <StyledDiv>\n                <Nav>\n                    <Nav.Link>\n                        <Link to='/'>\n                        <Nav.Item>\n                            Home\n                        </Nav.Item>\n                        </Link>\n                    </Nav.Link>\n\n                    <Nav.Link>\n                    <Link to='/explore'>\n                        <Nav.Item>\n                            Explore\n                        </Nav.Item>\n                    </Link>\n                    </Nav.Link>\n                </Nav>\n                <Nav >\n            {isLogged\n                ? (\n                    <React.Fragment >\n                        <Nav.Link>\n                            <Link>\n                                <Nav.Item className=\"justify-content-end\" onClick={()=>{this.props.history.push(`/profile/${userID}`)}}  >\n                                    Profile\n                                </Nav.Item>\n                            </Link>\n\n                        </Nav.Link>\n                        <Nav.Link>\n                            <Link>\n                                <Nav.Item onClick={()=>{this.props.doLogout()}} >\n                                        Logout\n                                </Nav.Item>\n                            </Link>\n                        </Nav.Link>\n                    </React.Fragment>\n                )\n                : (\n                    <React.Fragment>\n                        <Nav.Link>\n                            <Link>\n                                <Nav.Item onClick={()=>{handleShow(2)}} >\n                                    Register\n                                </Nav.Item>\n                            </Link>\n                        </Nav.Link>\n                        <Nav.Link>\n                            <Link>\n                                <Nav.Item onClick={()=>{handleShow(1)}}>\n                                    Login\n                                </Nav.Item>\n                            </Link>\n                        </Nav.Link>\n                    </React.Fragment>\n                )\n                }\n            </Nav>\n        </StyledDiv>\n        </StyledDiv>\n    )}\n    \n}\nexport default withRouter(NavBar)","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button'\n\n\nclass AddPhoto extends Component {\n    state = {\n    title: '',\n    url: '',\n    description: '',\n    camera: '',\n    category: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = async(e) => {\n        e.preventDefault()\n        console.log(this.props.userID)\n        const newPhoto = {\n            title: this.state.title,\n            url: this.state.url,\n            description: this.state.description,\n            camera: this.state.camera,\n            category: this.state.category,\n            created_by: this.props.userID\n        };\n        \n        try {\n            const photoResponse = await fetch(`${process.env.REACT_APP_BACKEND_URL}photos/`, {\n                method: 'POST',\n                body: JSON.stringify(newPhoto),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_BACKEND_URL}`\n                }\n            })\n            const parsedResponse = await photoResponse.json();\n        } catch(err){\n            console.log(err);\n            return err\n        }\n    }\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Title:\n                    <input type='text' name='title' placeholder='title' onChange={this.handleChange} value={this.state.title}/><br/>\n                </label>\n                <label>\n                    Url:\n                    <input type='text' name='url' placeholder='url' onChange={this.handleChange} value={this.state.url}/><br/>\n                </label>\n                <label>\n                    Description:\n                    <input type='text' name='description' placeholder='description' onChange={this.handleChange} value={this.state.description}/><br/>\n                </label>\n                <label>\n                    Camera:\n                    <input type='text' name='camera' placeholder='camera' onChange={this.handleChange} value={this.state.camera}/><br/>\n                </label>\n                <label>\n                    Category:\n                    <input type='text' name='category' placeholder='category' onChange={this.handleChange} value={this.state.category}/><br/>\n                </label>\n                <Button type='submit'>Submit Photo</Button>\n            </form>\n        )\n    }\n\n}\n\nexport default AddPhoto;","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport {Redirect, Route, withRouter} from \"react-router\"\n\n\n\nclass EditUserInfo extends Component {\n\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        userObj:{},\n        userID: '',\n    }\n    doHandleInput = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        console.log(this.state)\n    }\n\n    doHandleSubmit = async(e) => {\n\n        e.preventDefault()\n        console.log(\"updating it\")\n        const updateResponse = await fetch (`${process.env.REACT_APP_BACKEND_URL}/${this.state.userID}`,{\n            method:\"PUT\",\n            body: JSON.stringify(this.state),\n            headers:{\n                \"Content-Type\":'application/json'\n            }\n        });\n\n\n   \n        this.props.onHide();\n        this.props.history.push(`/profile/${this.state.userID}`);\n\n\n    }\n\n\n    getUser = async()=>{\n        console.log(this.props.userID,'this is props userid')\n        await this.setState({\n            userID:this.props.userID\n        })\n        \n        console.log(this.state)\n        const userResponse = await fetch (`${process.env.REACT_APP_BACKEND_URL}/${this.state.userID}`,{\n            method:\"GET\",\n            headers:{\n                \"Content-Type\":'application/json'\n            }\n        });\n        const parsedResponse = await userResponse.json();\n        console.log(parsedResponse)\n        this.setState({\n            userObj: parsedResponse\n        })\n       \n    }\n\n    componentDidMount(){\n        this.getUser();\n\n    }\n    render() {\n        console.log(this.state.userObj)\n        return(\n            <div className=\"edit\">\n                <form onSubmit={this.doHandleSubmit}>\n                    <h2>Edit Your Profile</h2>\n                    <label>\n                        <input type=\"text\" name=\"username\" defaultValue={this.state.userObj.username} onChange={this.doHandleInput} placeholder=\"username\" />\n                    </label>\n                    <br/>\n                    <label>\n                        <input type=\"text\" name=\"email\" defaultValue={this.state.userObj.email} placeholder={this.state.userObj.email} onChange={this.doHandleInput} placeholder=\"email\" />    \n                    </label>\n                    <br/>\n                    <label>\n                        <input type=\"password\" name=\"password\" defaultValue={this.state.userObj.password} placeholder={this.state.userObj.password} onChange={this.doHandleInput} placeholder=\"password\" />\n                    </label>\n                    <br/>\n                    <Button type=\"submit\" onSubmit={this.doHandleSubmit}>Update Profile</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(EditUserInfo);","import React, { Component , forwardRef, useRef, useImperativeHandle } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport Login from '../Login/Login'\nimport Register from '../Register/register'\nimport AddPhoto from '../AddPhoto/AddPhoto';\nimport EditUserInfo from '../EditUserInfo/EditUserInfo'\n\n\n\n\nclass Popup extends Component{\n    render() {\n        const {show,handleClose,modalID,checkedLogged,userID} = this.props\n        return (\n          <>\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n              </Modal.Header>\n                    <Modal.Body>\n                        {modalID === 1\n                        ?<Login logged={checkedLogged} onHide={handleClose} />:\n                        (modalID === 2 \n                        ? <Register onHide={handleClose}/>:\n                        (modalID === 3\n                        ? <AddPhoto userID={userID}/>:<EditUserInfo userID={userID} onHide={handleClose}/> )    )\n                        }\n                    </Modal.Body>\n              \n            </Modal>\n          </>\n        );\n      }\n}\n\nexport default Popup;","import React, { Component } from 'react';\nimport AddPhoto from '../AddPhoto/AddPhoto';\nimport { withRouter } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\nimport {Container, Card, CardDeck, Row} from 'react-bootstrap'\n\n\nclass Profile extends Component {\n    state = {\n        userID: null,\n        userObj:{},\n        userPhotos:[]\n    }\n\n    \n    getUser = async()=>{\n        \n        await this.setState({\n            userID:this.props.match.params.id\n        })\n        \n        const userResponse = await fetch (`${process.env.REACT_APP_BACKEND_URL}users/${this.props.match.params.id}`,{\n            method:\"GET\",\n            headers:{\n                \"Content-Type\":'application/json'\n            }\n        });\n        const parsedResponse = await userResponse.json();\n\n        this.setState({\n            userObj: parsedResponse\n        })\n       \n    }\n    getPhotos = async()=>{\n        console.log('get photos being called')\n        const photoRespnse = await fetch(`${process.env.REACT_APP_BACKEND_URL}photos/`,{\n            method:\"GET\",\n            headers:{\n                \"Content-Type\": 'application'\n            }\n        });\n        const parsedResponse = await photoRespnse.json();\n\n        this.setState({\n            userPhotos: parsedResponse\n        })\n        console.log(this.state.userPhotos)\n    }\n    checkPhotos =(arr,id)=>{\n        let newArr = [];\n        for(let i = 0;i<arr.length;i++){\n            if(arr[i].created_by ==id){\n                 newArr.push(arr[i])\n            }\n        }\n        return newArr;\n    }\n    sendDelete = async(id)=>{\n        await this.props.delete(id)\n        await this.getPhotos()\n    }\n\n    componentDidMount(){\n        this.getUser();\n        this.getPhotos();\n    }\n\n    render(){\n        const photos = this.checkPhotos(this.state.userPhotos,this.state.userID)\n\n        const {handleShow} = this.props \n        return(\n            <div>\n                {this.props.logged\n                ?<h1> Hey, {this.state.userObj.username}</h1>\n                :<h1>{this.state.userObj.username}</h1>}\n                \n                {this.props.logged\n                ?   \n                <div>\n                    <Button onClick={()=>{handleShow(3)}}>AddPhoto</Button>\n                    <Button onClick={()=>{handleShow(4)}}>Edit Profile</Button>\n   \n                    </div> \n                :<p></p>}\n            \n            \n            \n            <h1>User's photos</h1>\n            <div>\n            <Container>\n            <CardDeck>\n            {photos.map((photo,index)=>{\n                return(\n                \n                <Card>\n                    <Card.Img variant=\"top\" src=\"https://picsum.photos/id/851/300/300\" />\n                    <Card.Body>\n                    <Card.Title>{photo.title}</Card.Title>\n                    <Card.Text>\n                    Something\n                    </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button onClick={()=>this.sendDelete(photo.id)}>Delete</Button>\n                    </Card.Footer>\n\n                </Card>\n                )\n                })\n            }\n            </CardDeck>\n            </Container>\n            </div>\n           \n              \n\n            \n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Profile);","import React, {Component} from 'react';\nimport {Carousel, Container, Row, Col, Button} from 'react-bootstrap'\nimport styled from 'styled-components'\nimport AddPhoto from '../AddPhoto/AddPhoto';\n\nconst BackgroundCarousel = styled(Carousel) `\n    width: 80%;\n    height: 10%;\n`\nconst BackgroundRow = styled(Row) `\n    height: 100vh;\n    width: 100wh;\n    background-image: url(\"../images/bkg1.svg\");\n\n`\nconst CarouselItem = styled(Carousel.Item) `\n    margin-top: 40px;\n\n`\n\nclass Home extends Component {\n    render(){\n    const {creator} = this.props\n    console.log(creator)\n    return (\n        <Container>\n            <Carousel>\n                <CarouselItem>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://picsum.photos/id/851/600/400\"\n                    alt=\"First slide\"\n                    />\n                    <Carousel.Caption>\n                    <h6>Global network for photographers</h6>\n            <h1>Upload Photos</h1>\n            <Button variant=\"outline-info\" size=\"lg\">Sign Up</Button>\n                </Carousel.Caption>\n                </CarouselItem>\n                <CarouselItem>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://picsum.photos/id/1025/600/400\"\n                    alt=\"First slide\"\n                    />\n                                        <Carousel.Caption>\n                                        <h6>Global network for photographers</h6>\n                    <h1>Share Photos</h1><Button variant=\"outline-info\" size=\"lg\">Sign Up</Button>\n                </Carousel.Caption>\n                </CarouselItem>\n                <CarouselItem>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://picsum.photos/id/883/600/400\"\n                    alt=\"Second slide\"\n                    />\n\n                        <Carousel.Caption>\n                    <h6>Global network for photographers</h6>\n                    <h1>Discover Photos</h1>\n                    <Button variant=\"outline-info\" size=\"lg\">Sign Up</Button>\n                </Carousel.Caption>\n\n                </CarouselItem>\n                <CarouselItem>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://picsum.photos/id/872/600/400\"\n                    alt=\"First slide\"\n                    />\n\n                    <Carousel.Caption>\n                    <h6>Global network for photographers</h6>\n                    <h1>Discover Photos</h1>\n                    <Button variant=\"outline-info\" size=\"lg\">Sign Up</Button>\n                </Carousel.Caption>\n\n\n                </CarouselItem>\n            </Carousel>\n\n        </Container>\n    )};\n}\n\nexport default Home","import React, { Component } from 'react'\n// import ReactDOM from 'react-dom'   \nimport { Route, Switch ,withRouter} from 'react-router-dom'\nimport './App.css';\nimport Login from './components/Login/Login'\nimport Explore from './components/Explore/Explore'\nimport Register from './components/Register/register'\nimport Navbar from './components/Navbar/navbar'\nimport Popup from './components/Modal/modal'\nimport Profile from './components/Profile/Profile'\nimport * as routes from './constants/routes'\nimport Home from './components/Home/Home'\nimport EditUserInfo from './components/EditUserInfo/EditUserInfo'\nimport Logout from './components/Login/Login'\n\n\n\n\nclass App extends Component{\n  state = {\n    show: false,\n    modalID: 0,\n    logged: false,\n    userID: null\n  }\n  checkedLogged= (userID)=>{\n    this.setState({\n      logged:true,\n      userID: userID\n    })\n  }\n\n  deletePic = async(id) =>{\n    await fetch(`${process.env.REACT_APP_BACKEND_URL}photos/${id}`,{\n      method:\"DELETE\",\n      headers:{\n        \"Content-Type\": 'application'\n    }\n    })\n  }\n\n  doLogout = async () => {\n    console.log('logout')\n    await fetch(`${process.env.REACT_APP_BACKEND_URL}users/`,{ \n      method:\"GET\",\n      headers:{\n          \"Content-Type\": 'application'\n    }\n    })\n    this.props.history.push('/')\n    this.setState({\n        logged: false\n    })\n  }\n\n  handleClose = ()=> {\n    this.setState({ show: false });\n  }\n\n  handleShow = (num)=> {\n    this.setState({ show: true ,modalID: num});\n  }\n  render(){\n    return (\n      <React.Fragment>\n        <Navbar handleShow = {this.handleShow} doLogout={this.doLogout} isLogged={this.state.logged} getUser={this.getUser} userID={this.state.userID}/>\n          <Switch>\n            <Route exact path={routes.HOME} render={() =><Home creator={this.state.userID}/> } />\n            <Route exact path={routes.REGISTER} render={()  =><Register /> } />\n            <Route exact path={routes.LOGIN} render={()  =><Login /> } />\n            <Route exact path={routes.EXPLORE} render={()  =><Explore />} />\n            <Route exact path={`${routes.PROFILE}/:id`} render={()  =><Profile delete={this.deletePic}userID={this.state.userID} handleShow = {this.handleShow} logged={this.state.logged}/>} />\n\n            <Route exact path={routes.LOGOUT} render={()  =><Logout logStat={this.state.logged}/>} />\n          </Switch>\n        <Popup  handleClose= {this.handleClose} getUser={this.getUser} checkedLogged={this.checkedLogged} modalID = {this.state.modalID} show = {this.state.show} userID={this.state.userID} />\n      </React.Fragment>\n    )};\n}\n\n\nexport default withRouter(App);","export const REGISTER = '/register'\nexport const LOGIN = '/login'\nexport const EXPLORE = '/explore'\nexport const HOME = '/'\nexport const PROFILE = '/profile'\nexport const EDITUSERINFO = '/edit'\nexport const LOGOUT = '/'\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\t\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\ndocument.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}